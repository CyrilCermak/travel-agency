package cz.ucl.fa.ui;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.persistence.Query;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import cz.ucl.fa.model.Service;
import cz.ucl.fa.model.types.ServiceType;
import cz.ucl.fa.model.util.JPAUtil;
import cz.ucl.fa.ui.model.FilteredServicesTableModel;
 
public class SelectServiceDialog extends javax.swing.JDialog {
	private FilteredServicesTableModel serviceTableModel;
	private boolean wasCancelled;
	
	private javax.swing.JButton btCancel;
    private javax.swing.JButton btChoose;
    private javax.swing.JButton btFind;
    
    private javax.swing.JComboBox cbType;
    private javax.swing.JComboBox cbLocation;
    
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblLocation;
    
    private javax.swing.JScrollPane spServices;
    private javax.swing.JTable serviceTable;
    
    public SelectServiceDialog(JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();       
    }


    private void initComponents() {
    	setTitle("Select a service");
        setLayout(new GridBagLayout());
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblType = new javax.swing.JLabel();
        lblType.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblType.setText("Type:");

        lblLocation = new javax.swing.JLabel();
        lblLocation.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblLocation.setText("Location:");

        cbType = new javax.swing.JComboBox();
        cbType.setModel(new javax.swing.DefaultComboBoxModel(ServiceType.values()));

        cbLocation = new javax.swing.JComboBox();
		cbLocation.setModel(new javax.swing.DefaultComboBoxModel(getAllLocations()));
		cbLocation.setSelectedItem(null);
		
		btFind = new javax.swing.JButton();
        btFind.setText("Find");
        btFind.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
			serviceTableModel.setFilter((ServiceType)cbType.getSelectedItem(), (String)cbLocation.getSelectedItem());
			}
		});
		
        serviceTable = new javax.swing.JTable();
        serviceTable.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		serviceTableModel = new FilteredServicesTableModel();
        serviceTable.setModel(serviceTableModel);
        serviceTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
			public void valueChanged(ListSelectionEvent e) {
				if (!e.getValueIsAdjusting()) {
					if (serviceTable.getSelectedRow()>=0) {
						btChoose.setEnabled(true);
					} else {
						btChoose.setEnabled(false);
					}
				}
				
			}
		});
        spServices = new javax.swing.JScrollPane(serviceTable);
        
        btChoose = new javax.swing.JButton();
        btChoose.setText("Choose selected");
        btChoose.setEnabled(false);
        btChoose.addActionListener(new java.awt.event.ActionListener() {
        	public void actionPerformed(java.awt.event.ActionEvent e) {
        		wasCancelled=false;
        		setVisible(false);
        	}
        });

        btCancel = new javax.swing.JButton();
        btCancel.setText("Cancel");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
        	public void actionPerformed(java.awt.event.ActionEvent e) {
        		wasCancelled=true;
        		setVisible(false);
        	}
        });

        GridBagConstraints c;
        
        c = new GridBagConstraints();
        c.gridx = 0;
        c.gridy = 0;
        c.insets = new Insets(7,7,7,7);
        add(lblType,c);
        
        c = new GridBagConstraints();
        c.gridx = 1;
        c.gridy = 0;
        c.insets = new Insets(7,7,7,7);        
        c.fill = GridBagConstraints.HORIZONTAL;
        add(cbType,c);
        
        c = new GridBagConstraints();
        c.gridx = 0;
        c.gridy = 1;
        c.insets = new Insets(7,7,7,7);
        add(lblLocation,c);
        
        c = new GridBagConstraints();
        c.gridx = 1;
        c.gridwidth = 2;
        c.gridy = 1;
        c.weightx = 0.4;
        c.fill = GridBagConstraints.HORIZONTAL;
        c.insets = new Insets(7,7,7,7);
        add(cbLocation,c);
        
        c = new GridBagConstraints();
        c.gridx = 3;
        c.gridy = 1;
        c.insets = new Insets(7,7,7,7);
        add(btFind,c);
        
        c = new GridBagConstraints();
        c.gridx = 0;
        c.gridwidth = 4;
        c.gridy = 2;
        c.insets = new Insets(7,7,7,7);
        c.weighty = 0.5;
        c.fill = GridBagConstraints.BOTH;
        add(spServices,c);
        
        JPanel buttonPanel = new JPanel();
        buttonPanel.add(btChoose);
        buttonPanel.add(btCancel);
        
        c = new GridBagConstraints();
        c.gridx = 0;
        c.gridy = 3;
        c.gridwidth = 4;
        c.anchor = GridBagConstraints.SOUTHEAST;
        c.insets = new Insets(7,7,7,7);
        add(buttonPanel,c);
        
        pack();
    }    
    
    public static void main(String[] argv) {
		SwingUtilities.invokeLater(new Runnable() {

			public void run() {
				SelectServiceDialog instance = new SelectServiceDialog(null,true);
				instance.setVisible(true);
				if(!instance.wasCancelled()) System.out.println("Selected accommodation: " + instance.getSelectedService());
				System.exit(0);
			}

		});
	}
    
    @SuppressWarnings("unchecked")
	private Object[] getAllLocations() {
		Query q = JPAUtil.getEntityManager().createQuery(
				"SELECT DISTINCT s.location FROM Service s");
		List<String> allLocations = (List<String>) q.getResultList();
		String[] result = new String[allLocations.size()];
		for(int i = 0; i< allLocations.size(); i++) result[i] = allLocations.get(i);

		return result;
	}


	protected Service getSelectedService() {
		return serviceTableModel.getService(serviceTable.getSelectedRow());
	}


	protected boolean wasCancelled() {
		return wasCancelled;
	}
   
}
